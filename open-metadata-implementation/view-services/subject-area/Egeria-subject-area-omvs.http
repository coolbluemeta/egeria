# Egeria-subject-area-view-service

@baseURL=https://localhost:9443
@viewServer=view-server

###
# =====================================================================================================================
# Manage the authentication token.  Run this request to create/refresh the token.

# @name Token (RequestBody)
POST {{baseURL}}/api/token
Content-Type: application/json

{
  "userId" : "peterprofile",
  "password" : "secret"
}

> {% client.global.set("token", response.body); %}


###
# =====================================================================================================================
# Work with Subject Area Definitions
# https://egeria-project.org/concepts/subject-area

@subjectAreaGUID=add guid here
@parentSubjectAreaGUID=add guid here
@nestedSubjectAreaGUID=add guid here

###
# @name createSubjectArea
# Create a subject area.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/subject-area/subject-areas
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewElementRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "anchorGUID" : "add guid here",
  "isOwnAnchor": false,
  "parentGUID": "add guid here",
  "parentRelationshipTypeName": "add type name here",
  "parentRelationshipProperties": {
    "class": "ElementProperties",
    "propertyValueMap" : {
      "description" : {
        "class": "PrimitiveTypePropertyValue",
        "typeName": "string",
        "primitiveValue" : "New description"
      }
    }
  },
  "parentAtEnd1": false,
  "properties": {
    "class" : "SubjectAreaProperties",
    "qualifiedName": "add unique name here",
    "displayName": "add short name here",
    "subjectAreaName": "add short name here",
    "description": "add description here",
    "usage": "add usage of this subject area",
    "scope": "add scope of this subject area",
    "domainIdentifier": 0,
    "additionalProperties": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    },
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  }
}

###
# @name createSubjectAreaFromTemplate
# Create a new metadata element to represent a subject area using an existing metadata element as a template.  The template defines additional classifications and relationships that should be added to the new element.",
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/subject-area/subject-areas/from-template
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "TemplateRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "anchorGUID" : "add guid here",
  "isOwnAnchor": false,
  "parentGUID": "add guid here",
  "parentRelationshipTypeName": "add type name here",
  "parentRelationshipProperties": {
    "class": "ElementProperties",
    "propertyValueMap" : {
      "description" : {
        "class": "PrimitiveTypePropertyValue",
        "typeName": "string",
        "primitiveValue" : "New description"
      }
    }
  },
  "parentAtEnd1": false,
  "templateGUID": "add guid here",
  "replacementProperties": {
    "class": "ElementProperties",
    "propertyValueMap" : {
      "description" : {
        "class": "PrimitiveTypePropertyValue",
        "typeName": "string",
        "primitiveValue" : "New description"
      }
    }
  },
  "placeholderPropertyValues":  {
    "placeholder1" : "propertyValue1",
    "placeholder2" : "propertyValue2"
  }
}


###
# @name updateSubjectArea
# Update the properties of a subject area.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/subject-area/subject-areas/{{subjectAreaGUID}}/update?replaceAllProperties=false
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "UpdateElementRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "properties": {
    "class" : "SubjectAreaProperties",
    "qualifiedName": "add unique name here",
    "displayName": "add short name here",
    "subjectAreaName": "add short name here",
    "description": "add description here",
    "usage": "add usage of this subject area",
    "scope": "add scope of this subject area",
    "domainIdentifier": 0,
    "additionalProperties": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    },
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  }
}


###
# @name linkSubjectAreas
# Connect a subject area to a broader subject area. Request body is optional.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/subject-area/subject-areas/{{parentSubjectAreaGUID}}/subject-area-hierarchies/{{nestedSubjectAreaGUID}}/attach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewRelationshipRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "properties": {
    "class": "RelationshipProperties",
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  }
}


###

# @name detachSubjectAreas
# Detach a nested subject area from a parent subject area. Request body is optional.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/subject-area/subject-areas/{{parentSubjectAreaGUID}}/subject-area-hierarchies/{{nestedSubjectAreaGUID}}/detach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "MetadataSourceRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}


###
# @name deleteSubjectArea
# Delete a subject area. Request body is optional.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/subject-area/subject-areas/{{subjectAreaGUID}}/delete
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "MetadataSourceRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}


###
# @name findAllSubjectAreas
# Retrieve the list of subject area metadata elements that contain the search string.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/subject-area/subject-areas/by-search-string?startFrom=0&pageSize=10&startsWith=true&endsWith=false&ignoreCase=false
Authorization: Bearer {{token}}
Content-Type: application/json


###
# @name findAllSubjectAreas - with full request body
# Retrieve the list of subject area metadata elements that contain the search string.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/subject-area/subject-areas/by-search-string?startFrom=0&pageSize=10&startsWith=true&endsWith=false&ignoreCase=false
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "FilterRequestBody",
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "limitResultsByStatus" : ["ACTIVE"],
  "sequencingOrder" : "PROPERTY_ASCENDING",
  "sequencingProperty" : "qualifiedName"
}


###
# @name findSubjectAreas
# Retrieve the list of subject area metadata elements that contain the search string.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/subject-area/subject-areas/by-search-string?startFrom=0&pageSize=10&startsWith=true&endsWith=false&ignoreCase=false
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "filter" : "Add name here"
}


###
# @name findSubjectAreas - with full request body
# Retrieve the list of subject area metadata elements that contain the search string.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/subject-area/subject-areas/by-search-string?startFrom=0&pageSize=10&startsWith=true&endsWith=false&ignoreCase=false
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "FilterRequestBody",
 "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "limitResultsByStatus" : ["ACTIVE"],
  "sequencingOrder" : "PROPERTY_ASCENDING",
  "sequencingProperty" : "qualifiedName",
  "filter" : "Add name here"
}

###

# @name getSubjectAreasByName
# Returns the list of subject areas with a particular name.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/subject-area/subject-areas/by-name?startFrom=0&pageSize=10
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "filter" : "Add name here"
}


###

# @name getSubjectAreasByName - with full request body
# Returns the list of subject areas with a particular name.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/subject-area/subject-areas/by-name?startFrom=0&pageSize=10
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "FilterRequestBody",
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "limitResultsByStatus" : ["ACTIVE"],
  "sequencingOrder" : "PROPERTY_ASCENDING",
  "sequencingProperty" : "qualifiedName",
  "filter" : "Add name here"
}


###
# @name getSubjectAreaByGUID
# Return the properties of a specific subject area.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/subject-area/subject-areas/{{subjectAreaGUID}}/retrieve
Authorization: Bearer {{token}}
Content-Type: application/json

###
# @name getSubjectAreaByGUID - with request body
# Return the properties of a specific subject area.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/subject-area/subject-areas/{{subjectAreaGUID}}/retrieve
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "GetRequestBody",
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}

###

###
