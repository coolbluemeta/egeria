# Egeria-data-designer-view-service

@baseURL=https://localhost:9443
@viewServer=view-server

###
# =====================================================================================================================
# Manage the authentication token.  Run this request to create/refresh the token.

# @name Token (RequestBody)
POST {{baseURL}}/api/token
Content-Type: application/json

{
  "userId" : "peterprofile",
  "password" : "secret"
}

> {% client.global.set("token", response.body); %}




###
# =====================================================================================================================
# Work with Data Structures
# https://egeria-project.org/concepts/data-structure

@dataStructureGUID=add guid here
@parentDataStructureGUID=add guid here
@memberDataFieldGUID=add guid here

###
# @name createDataStructure
# Create a data structure.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-structures
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewDataStructureRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "anchorGUID" : "add guid here",
  "isOwnAnchor": false,
  "parentGUID": "add guid here",
  "parentRelationshipTypeName": "add type name here",
  "parentRelationshipProperties": {
    "class": "ElementProperties",
    "propertyValueMap" : {
      "description" : {
        "class": "PrimitiveTypePropertyValue",
        "typeName": "string",
        "primitiveValue" : "New description"
      }
    }
  },
  "parentAtEnd1": false,
  "properties": {
    "class" : "DataStructureProperties",
    "qualifiedName": "add unique name here",
    "displayName": "add short name here",
    "description": "add description here",
    "namespace": "add namespace for this structure",
    "versionIdentifier": "add version for this structure",
    "additionalProperties": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    },
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  }
}

###
# @name createDataStructure
# Create a data structure.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-structures/create
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "properties": {
    "class" : "DataStructureProperties",
    "qualifiedName": "add unique name here",
    "displayName": "add short name here",
    "description": "add description here",
    "namespace": "add namespace for this structure",
    "versionIdentifier": "add version for this structure"
  }
}

###
# @name createDataStructureFromTemplate
# Create a new metadata element to represent a data structure using an existing metadata element as a template.  The template defines additional classifications and relationships that should be added to the new element.",
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-structures/from-template
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "TemplateRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "anchorGUID" : "add guid here",
  "isOwnAnchor": false,
  "parentGUID": "add guid here",
  "parentRelationshipTypeName": "add type name here",
  "parentRelationshipProperties": {
    "class": "ElementProperties",
    "propertyValueMap" : {
      "description" : {
        "class": "PrimitiveTypePropertyValue",
        "typeName": "string",
        "primitiveValue" : "New description"
      }
    }
  },
  "parentAtEnd1": false,
  "templateGUID": "add guid here",
  "replacementProperties": {
    "class": "ElementProperties",
    "propertyValueMap" : {
      "description" : {
        "class": "PrimitiveTypePropertyValue",
        "typeName": "string",
        "primitiveValue" : "New description"
      }
    }
  },
  "placeholderPropertyValues":  {
    "placeholder1" : "propertyValue1",
    "placeholder2" : "propertyValue2"
  }
}


###
# @name updateDataStructure
# Update the properties of a data structure.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-structures/{{dataStructureGUID}}/update?replaceAllProperties=false
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "UpdateDataStructureRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "properties": {
    "class" : "DataStructureProperties",
    "qualifiedName": "add unique name here",
    "displayName": "add short name here",
    "description": "add description here",
    "namespace": "add namespace for this structure",
    "versionIdentifier": "add version for this structure",
    "additionalProperties": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    },
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  }
}


###
# @name linkMemberDataField
# Connect two data structure segments. Request body is optional.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-structures/{{parentDataStructureGUID}}/member-data-fields/{{memberDataFieldGUID}}/attach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "MemberDataFieldRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "properties": {
    "class": "MemberDataFieldProperties",
    "dataFieldPosition": 0,
    "minCardinality": 0,
    "maxCardinality": 0,
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  }
}


###

# @name detachMemberDataField
# Detach a data field from a data structure. Request body is optional.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-structures/{{parentDataStructureGUID}}/member-data-fields/{{memberDataFieldGUID}}/detach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "MetadataSourceRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}


###
# @name deleteDataStructure
# Delete a data structure. Request body is optional.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-structures/{{dataStructureGUID}}/delete
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "MetadataSourceRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}


###
# @name findAllDataStructures
# Retrieve the list of data structure metadata elements that contain the search string.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-structures/by-search-string?startFrom=0&pageSize=10&startsWith=true&endsWith=false&ignoreCase=false
Authorization: Bearer {{token}}
Content-Type: application/json


###
# @name findAllDataStructures - with full request body
# Retrieve the list of data structure metadata elements that contain the search string.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-structures/by-search-string?startFrom=0&pageSize=10&startsWith=true&endsWith=false&ignoreCase=false
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "FilterRequestBody",
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "limitResultsByStatus" : ["ACTIVE"],
  "sequencingOrder" : "PROPERTY_ASCENDING",
  "sequencingProperty" : "qualifiedName"
}


###
# @name findDataStructures
# Retrieve the list of data structure metadata elements that contain the search string.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-structures/by-search-string?addImplementation=true&startFrom=0&pageSize=10&startsWith=true&endsWith=false&ignoreCase=false
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "filter" : "Add name here"
}


###
# @name findDataStructures - with full request body
# Retrieve the list of data structure metadata elements that contain the search string.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-structures/by-search-string?addImplementation=true&startFrom=0&pageSize=10&startsWith=true&endsWith=false&ignoreCase=false
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "FilterRequestBody",
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "limitResultsByStatus" : ["ACTIVE"],
  "sequencingOrder" : "PROPERTY_ASCENDING",
  "sequencingProperty" : "qualifiedName",
  "filter" : "Add name here"
}

###

# @name getDataStructuresByName
# Returns the list of data structures with a particular name.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-structures/by-name?addImplementation=true&startFrom=0&pageSize=10
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "filter" : "Add name here"
}


###

# @name getDataStructuresByName - with full request body
# Returns the list of data structures with a particular name.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-structures/by-name?addImplementation=true&startFrom=0&pageSize=10
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "FilterRequestBody",
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "limitResultsByStatus" : ["ACTIVE"],
  "sequencingOrder" : "PROPERTY_ASCENDING",
  "sequencingProperty" : "qualifiedName",
  "filter" : "Add name here"
}


###
# @name getDataStructureByGUID
# Return the properties of a specific data structure.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-structures/{{dataStructureGUID}}/retrieve
Authorization: Bearer {{token}}
Content-Type: application/json

###
# @name getDataStructureByGUID - with request body
# Return the properties of a specific data structure.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-structures/{{dataStructureGUID}}/retrieve?addImplementation=false
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "AnyTimeRequestBody",
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}

###

###
# =====================================================================================================================
# Work with Data Fields
# https://egeria-project.org/concepts/data-field

@dataFieldGUID=add guid here
@parentDataFieldGUID=add guid here
@nestedDataFieldGUID=add guid here

###
# @name createDataField
# Create a data field.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-fields
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewDataFieldRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "anchorGUID" : "add guid here",
  "isOwnAnchor": false,
  "parentGUID": "add guid here",
  "parentRelationshipTypeName": "add type name here",
  "parentRelationshipProperties": {
    "class": "ElementProperties",
    "propertyValueMap" : {
      "description" : {
        "class": "PrimitiveTypePropertyValue",
        "typeName": "string",
        "primitiveValue" : "New description"
      }
    }
  },
  "parentAtEnd1": false,
  "properties": {
    "class" : "DataFieldProperties",
    "qualifiedName": "add unique name here",
    "displayName": "add short name here",
    "namespace": "",
    "description": "add description here",
    "versionIdentifier": "add version",
    "aliases": ["alias1", "alias2"],
    "isDeprecated": false,
    "isNullable" : false,
    "defaultValue": "",
    "dataType": "",
    "minimumLength": 0,
    "length": 0,
    "precision": 0,
    "orderedValues": false,
    "sortOrder": "UNSORTED",
    "additionalProperties": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    },
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  }
}

###
# @name createDataField
# Create a data field.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-fields/create
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "properties": {
    "class": "DataFieldProperties",
    "qualifiedName": "add unique name here",
    "displayName": "add short name here",
    "namespace": "",
    "description": "add description here",
    "versionIdentifier": "add version",
    "aliases": [
      "alias1",
      "alias2"
    ],
    "isDeprecated": false,
    "isNullable": false,
    "defaultValue": "",
    "dataType": "",
    "minimumLength": 0,
    "length": 0,
    "precision": 0,
    "orderedValues": false,
    "sortOrder": "UNSORTED",
    "additionalProperties": {
      "property1": "propertyValue1",
      "property2": "propertyValue2"
    }
  }
}

###
# @name createDataFieldFromTemplate
# Create a new metadata element to represent a data field using an existing metadata element as a template.  The template defines additional classifications and relationships that should be added to the new element.",
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-fields/from-template
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "TemplateRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "anchorGUID" : "add guid here",
  "isOwnAnchor": false,
  "parentGUID": "add guid here",
  "parentRelationshipTypeName": "add type name here",
  "parentRelationshipProperties": {
    "class": "ElementProperties",
    "propertyValueMap" : {
      "description" : {
        "class": "PrimitiveTypePropertyValue",
        "typeName": "string",
        "primitiveValue" : "New description"
      }
    }
  },
  "parentAtEnd1": false,
  "templateGUID": "add guid here",
  "replacementProperties": {
    "class": "ElementProperties",
    "propertyValueMap" : {
      "description" : {
        "class": "PrimitiveTypePropertyValue",
        "typeName": "string",
        "primitiveValue" : "New description"
      }
    }
  },
  "placeholderPropertyValues":  {
    "placeholder1" : "propertyValue1",
    "placeholder2" : "propertyValue2"
  }
}


###
# @name updateDataField
# Update the properties of a data field.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-fields/{{dataFieldGUID}}/update?replaceAllProperties=false
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "UpdateDataFieldRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "properties": {
    "class" : "DataFieldProperties",
    "qualifiedName": "add unique name here",
    "displayName": "add short name here",
    "namespace": "",
    "description": "add description here",
    "versionIdentifier": "add version",
    "aliases": ["alias1", "alias2"],
    "isDeprecated": false,
    "isNullable" : false,
    "defaultValue": "",
    "dataType": "",
    "minimumLength": 0,
    "length": 0,
    "precision": 0,
    "orderedValues": false,
    "sortOrder": "UNSORTED",
    "additionalProperties": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    },
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  }
}


###
# @name linkNestedDataFields
# Connect two data field as parent and child.  Request body is optional.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-fields/{{parentDataFieldGUID}}/nested-data-fields/{{nestedDataFieldGUID}}/attach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "MemberDataFieldRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "properties": {
    "class": "MemberDataFieldProperties",
    "dataFieldPosition": 0,
    "minCardinality": 0,
    "maxCardinality": 0,
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  }
}


###

# @name detachNestedDataFields
# Detach two data fields from one another. Request body is optional.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-fields/{{parentDataFieldGUID}}/nested-data-fields/{{nestedDataFieldGUID}}/detach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "MetadataSourceRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}


###
# @name deleteDataField
# Delete a data field. Request body is optional.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-fields/{{dataFieldGUID}}/delete
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "MetadataSourceRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}


###
# @name findAllDataFields
# Retrieve the list of data field metadata elements that contain the search string.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-fields/by-search-string?startFrom=0&pageSize=10&startsWith=true&endsWith=false&ignoreCase=false
Authorization: Bearer {{token}}
Content-Type: application/json


###
# @name findAllDataFields - with full request body
# Retrieve the list of data field metadata elements that contain the search string.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-fields/by-search-string?startFrom=0&pageSize=10&startsWith=true&endsWith=false&ignoreCase=false
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "FilterRequestBody",
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "limitResultsByStatus" : ["ACTIVE"],
  "sequencingOrder" : "PROPERTY_ASCENDING",
  "sequencingProperty" : "qualifiedName"
}


###
# @name findDataFields
# Retrieve the list of data field metadata elements that contain the search string.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-fields/by-search-string?addImplementation=true&startFrom=0&pageSize=10&startsWith=true&endsWith=false&ignoreCase=false
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "filter" : "Add name here"
}


###
# @name findDataFields - with full request body
# Retrieve the list of data field metadata elements that contain the search string.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-fields/by-search-string?addImplementation=true&startFrom=0&pageSize=10&startsWith=true&endsWith=false&ignoreCase=false
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "FilterRequestBody",
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "limitResultsByStatus" : ["ACTIVE"],
  "sequencingOrder" : "PROPERTY_ASCENDING",
  "sequencingProperty" : "qualifiedName",
  "filter" : "Add name here"
}

###

# @name getDataFieldsByName
# Returns the list of data fields with a particular name.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-fields/by-name?addImplementation=true&startFrom=0&pageSize=10
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "filter" : "Add name here"
}


###

# @name getDataFieldsByName - with full request body
# Returns the list of data fields with a particular name.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-fields/by-name?addImplementation=true&startFrom=0&pageSize=10
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "FilterRequestBody",
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "limitResultsByStatus" : ["ACTIVE"],
  "sequencingOrder" : "PROPERTY_ASCENDING",
  "sequencingProperty" : "qualifiedName",
  "filter" : "Add name here"
}


###
# @name getDataFieldByGUID
# Return the properties of a specific data field.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-fields/{{dataFieldGUID}}/retrieve
Authorization: Bearer {{token}}
Content-Type: application/json

###
# @name getDataFieldByGUID - with request body
# Return the properties of a specific data field.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-fields/{{dataFieldGUID}}/retrieve?addImplementation=false
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "AnyTimeRequestBody",
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}

###

###
# =====================================================================================================================
# Work with Data Classes
# https://egeria-project.org/concepts/data-class

@dataClassGUID=add guid here
@parentDataClassGUID=add guid here
@childDataClassGUID=add guid here

###
# @name createDataClass
# Create an data class.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-classes
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "NewDataClassRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "anchorGUID" : "add guid here",
  "isOwnAnchor": false,
  "parentGUID": "add guid here",
  "parentRelationshipTypeName": "add type name here",
  "parentRelationshipProperties": {
    "class": "ElementProperties",
    "propertyValueMap" : {
      "description" : {
        "class": "PrimitiveTypePropertyValue",
        "typeName": "string",
        "primitiveValue" : "New description"
      }
    }
  },
  "parentAtEnd1": false,
  "properties": {
    "class" : "DataClassProperties",
    "qualifiedName": "add unique name here",
    "displayName": "add short name here",
    "description": "add description here",
    "namespace": "add scope of this data class's applicability.",
    "matchPropertyNames": ["name1", "name2"],
    "matchThreshold": 0,
    "specification": "",
    "specificationDetails": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    },
    "dataType": "",
    "allowsDuplicateValues": true,
    "isNullable": false,
    "defaultValue": "",
    "averageValue": "",
    "valueList": [],
    "valueRangeFrom": "",
    "valueRangeTo": "",
    "sampleValues": [],
    "dataPatterns" : [],
    "namePatterns": [],
    "additionalProperties": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    },
    "effectiveFrom": "{{$isoTimestamp}}",
    "effectiveTo": "{{$isoTimestamp}}"
  }
}

###
# @name createDataClass
# Create an data class.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-classes/create
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "properties": {
    "class": "DataClassProperties",
    "qualifiedName": "add unique name here",
    "displayName": "add short name here",
    "description": "add description here",
    "namespace": "add scope of this data class's applicability.",
    "matchPropertyNames": [
      "name1",
      "name2"
    ],
    "matchThreshold": 0,
    "specification": "",
    "specificationDetails": {
      "property1": "propertyValue1",
      "property2": "propertyValue2"
    },
    "dataType": "",
    "allowsDuplicateValues": true,
    "isNullable": false,
    "defaultValue": "",
    "averageValue": "",
    "valueList": [],
    "valueRangeFrom": "",
    "valueRangeTo": "",
    "sampleValues": [],
    "dataPatterns": [],
    "namePatterns": [],
    "additionalProperties": {
      "property1": "propertyValue1",
      "property2": "propertyValue2"
    }
  }
}

###
# @name createDataClassFromTemplate
# Create a new metadata element to represent an data class using an existing metadata element as a template.  The template defines additional classifications and relationships that should be added to the new element.",
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-classes/from-template
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "TemplateRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "anchorGUID" : "add guid here",
  "isOwnAnchor": false,
  "parentGUID": "add guid here",
  "parentRelationshipTypeName": "add type name here",
  "parentRelationshipProperties": {
    "class": "ElementProperties",
    "propertyValueMap" : {
      "description" : {
        "class": "PrimitiveTypePropertyValue",
        "typeName": "string",
        "primitiveValue" : "New description"
      }
    }
  },
  "parentAtEnd1": false,
  "templateGUID": "add guid here",
  "replacementProperties": {
    "class": "ElementProperties",
    "propertyValueMap" : {
      "description" : {
        "class": "PrimitiveTypePropertyValue",
        "typeName": "string",
        "primitiveValue" : "New description"
      }
    }
  },
  "placeholderPropertyValues":  {
    "placeholder1" : "propertyValue1",
    "placeholder2" : "propertyValue2"
  }
}


###
# @name updateDataClass
# Update the properties of an data class.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-classes/{{dataClassGUID}}/update?replaceAllProperties=false
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "UpdateDataClassRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "properties": {
    "class" : "DataClassProperties",
    "qualifiedName": "add unique name here",
    "displayName": "add short name here",
    "description": "add description here",
    "namespace": "add scope of this data class's applicability.",
    "matchPropertyNames": ["name1", "name2"],
    "matchThreshold": 0,
    "specification": "",
    "specificationDetails": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    },
    "dataType": "",
    "allowsDuplicateValues": true,
    "isNullable": false,
    "defaultValue": "",
    "averageValue": "",
    "valueList": [],
    "valueRangeFrom": "",
    "valueRangeTo": "",
    "sampleValues": [],
    "dataPatterns" : [],
    "namePatterns": [],
    "additionalProperties": {
      "property1" : "propertyValue1",
      "property2" : "propertyValue2"
    }
  }
}


###
# @name linkNestedDataClass
# Connect two data classes to show that one is used by the other when it is validating (typically a complex data item). Request body is optional.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-classes/{{parentDataClassGUID}}/nested-data-classes/{{childDataClassGUID}}/attach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "MetadataSourceRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}


###

# @name detachNestedDataClass
# Detach two nested data classes from one another. Request body is optional.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-classes/{{parentDataClassGUID}}/nested-data-classes/{{childDataClassGUID}}/detach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "MetadataSourceRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}



###
# @name linkSpecialistDataClass
#  Connect two data classes to show that one provides a more specialist evaluation. Request body is optional.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-classes/{{parentDataClassGUID}}/specialist-data-classes/{{childDataClassGUID}}/attach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "MetadataSourceRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}


###

# @name linkSpecialistDataClass
# Detach two data classes from one another. Request body is optional.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-classes/{{parentDataClassGUID}}/specialist-data-classes/{{childDataClassGUID}}/detach
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "MetadataSourceRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}

###
# @name deleteDataClass
# Delete an data class. Request body is optional.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-classes/{{dataClassGUID}}/delete
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "MetadataSourceRequestBody",
  "externalSourceGUID": "add guid here",
  "externalSourceName": "add qualified name here",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}


###
# @name findAllDataClasses
# Retrieve the list of data class metadata elements that contain the search string.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-classes/by-search-string?startFrom=0&pageSize=10&startsWith=true&endsWith=false&ignoreCase=false
Authorization: Bearer {{token}}
Content-Type: application/json


###
# @name findAllDataClasses - with full request body
# Retrieve the list of data class metadata elements that contain the search string.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-classes/by-search-string?startFrom=0&pageSize=10&startsWith=true&endsWith=false&ignoreCase=false
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "FilterRequestBody",
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "limitResultsByStatus" : ["ACTIVE"],
  "sequencingOrder" : "PROPERTY_ASCENDING",
  "sequencingProperty" : "qualifiedName"
}


###
# @name findDataClasses
# Retrieve the list of data class metadata elements that contain the search string.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-classes/by-search-string?addImplementation=true&startFrom=0&pageSize=10&startsWith=true&endsWith=false&ignoreCase=false
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "filter" : "Add name here"
}


###
# @name findDataClasses - with full request body
# Retrieve the list of data class metadata elements that contain the search string.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-classes/by-search-string?addImplementation=true&startFrom=0&pageSize=10&startsWith=true&endsWith=false&ignoreCase=false
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "FilterRequestBody",
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "limitResultsByStatus" : ["ACTIVE"],
  "sequencingOrder" : "PROPERTY_ASCENDING",
  "sequencingProperty" : "qualifiedName",
  "filter" : "Add name here"
}

###

# @name getDataClassesByName
# Returns the list of data classes with a particular name.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-classes/by-name?addImplementation=true&startFrom=0&pageSize=10
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "filter" : "Add name here"
}


###

# @name getDataClassesByName - with full request body
# Returns the list of data classes with a particular name.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-classes/by-name?addImplementation=true&startFrom=0&pageSize=10
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "FilterRequestBody",
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "limitResultsByStatus" : ["ACTIVE"],
  "sequencingOrder" : "PROPERTY_ASCENDING",
  "sequencingProperty" : "qualifiedName",
  "filter" : "Add name here"
}


###
# @name getDataClassByGUID
# Return the properties of a specific data class.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-classes/{{dataClassGUID}}/retrieve
Authorization: Bearer {{token}}
Content-Type: application/json

###
# @name getDataClassByGUID - with request body
# Return the properties of a specific data class.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/data-designer/data-classes/{{dataClassGUID}}/retrieve?addImplementation=false
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "AnyTimeRequestBody",
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}

###
