# Egeria-glossary-browser-omvs

@baseURL=https://localhost:9443
@viewServer=view-server

###
# =====================================================================================================================
# Manage the authentication token.  Run this request to create/refresh the token.

# @name Token (RequestBody)
POST {{baseURL}}/api/token
Content-Type: application/json

{
  "userId" : "peterprofile",
  "password" : "secret"
}

> {% client.global.set("token", response.body); %}


###
# group: Glossaries
# @name getGlossaryTermStatuses
# Return the list of glossary term status enum values.
GET {{baseURL}}/servers/{{viewServer}}/api/open-metadata/glossary-browser/glossaries/terms/status-list
Authorization: Bearer {{token}}

###
# group: Glossaries
# @name getGlossaryTermRelationshipStatuses
# Return the list of glossary term relationship status enum values.  These values are stored in a term-to-term,
# or term-to-category, relationship and are used to indicate how much the relationship should be trusted.
GET {{baseURL}}/servers/{{viewServer}}/api/open-metadata/glossary-browser/glossaries/terms/relationships/status-list
Authorization: Bearer {{token}}


###
# group: Glossaries
# @name getGlossaryTermActivityTypes
# Return the list of glossary term activity type enum values.
GET {{baseURL}}/servers/{{viewServer}}/api/open-metadata/glossary-browser/glossaries/terms/activity-types
Authorization: Bearer {{token}}


###
# @name findGlossaries
# Retrieve the list of glossary metadata elements that contain the search string.  The search string is located
# in the request body and is interpreted as a plain string.  The request parameters, startsWith, endsWith and
# ignoreCase can be used to allow a fuzzy search.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/glossary-browser/glossaries/by-search-string
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "SearchStringRequestBody",
  "searchString" : "sus",
  "startsWith" : false,
  "endsWith" : false,
  "ignoreCase" : true,
  "startFrom" : 0,
  "pageSize": 0,
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "limitResultsByStatus" : ["ACTIVE"],
  "sequencingOrder" : "PROPERTY_ASCENDING",
  "sequencingProperty" : "qualifiedName"
}


###
# @name getGlossariesByName
# Retrieve the list of glossary metadata elements with an exactly matching qualified or display name.
# There are no wildcards supported on this request.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/glossary-browser/glossaries/by-name
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "FilterRequestBody",
  "name" : "Sustainability Glossary",
  "startFrom" : 0,
  "pageSize": 0,
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false,
  "limitResultsByStatus" : ["ACTIVE"],
  "sequencingOrder" : "PROPERTY_ASCENDING",
  "sequencingProperty" : "qualifiedName"
}

###

@glossaryGUID=add guid here

###
# @name getGlossaryByGUID
# Retrieve the glossary metadata element with the supplied unique identifier.  The optional request body allows you to
# specify that the glossary element should only be returned if it was effective at a particular time.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/glossary-browser/glossaries/{{glossaryGUID}}
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "GetRequestBody",
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}

###

@glossaryTermGUID=add guid here

###
# @name getGlossaryForTerm
# Retrieve the glossary metadata element for the requested term.  The optional request body allows you to specify
# additional sesrch options.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/glossary-browser/glossaries/for-term/{{glossaryTermGUID}}
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "GetRequestBody",
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}


###
# @name getGlossaryTermByName
# Retrieve the list of glossary metadata elements with an exactly matching qualified or display name.
# There are no wildcards supported on this request.
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/glossary-browser/glossaries/terms/by-name
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "FilterRequestBody",
  "filter" : "Carbon Dioxide"
}


###
# @name Retrieve the DRAFT glossary terms from a glossary
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/glossary-browser/glossaries/terms/by-search-string
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "class" : "SearchStringRequestBody",
    "searchString" : "",
    "startsWith" : false,
    "endsWith" : false,
    "ignoreCase" : true,
    "startFrom" : 0,
    "pageSize": 0,
    "anchorScopeGUID" : "{{glossaryGUID}}",
    "limitResultsByStatus" : ["DRAFT"]
}

###
# group: GlossaryTerms
# @name Retrieve the ACTIVE and PREPARED glossary terms from a glossary
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/glossary-browser/glossaries/terms/by-search-string
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "class" : "SearchStringRequestBody",
    "searchString" : "",
    "startsWith" : false,
    "endsWith" : false,
    "ignoreCase" : true,
    "startFrom" : 0,
    "pageSize": 0,
    "glossaryGUID" : "{{glossaryGUID}}",
    "limitResultsByStatus" : ["ACTIVE", "PREPARED"]
}

###
# @name Retrieve a glossary term by GUID
POST {{baseURL}}/servers/{{viewServer}}/api/open-metadata/glossary-browser/glossaries/terms/{{glossaryTermGUID}}
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "class" : "GetRequestBody",
  "asOfTime" : "{{$isoTimestamp}}",
  "effectiveTime" : "{{$isoTimestamp}}",
  "forLineage" : false,
  "forDuplicateProcessing" : false
}
